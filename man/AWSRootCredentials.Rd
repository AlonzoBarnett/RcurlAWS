% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AWSRootCredentials.R
\docType{data}
\name{AWSRootCredentials}
\alias{AWSRootCredentials}
\title{AWS Root Credential Manager}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
AWSRootCredentials
}
\arguments{
\item{AWS_ACCESS_KEY_ID}{Your AWS root account access id}

\item{AWS_SECRET_ACCESS_KEY}{Your AWS root account secret key}

\item{sourceFile}{Location of credentials file ex. ~/.aws/.credential}

\item{profileName}{Name of the profile you wish to invoke
'defualt' is used unless otherwise explicitly declared}
}
\description{
R6 implementation of AWS Root credential searches and management

\code{AWSRootCredentials$new(AWS_ACCESS_KEY_ID = NULL,
                          AWS_SECRET_ACCESS_KEY = NULL,
                          sourceFile = NULL,
                          profileName = "default",
                          .silent = T)
}

\code{AWSRootCredentials$print()}
}
\examples{
\dontrun{rootCreds <- AWSRootCredentials$new()}
\dontrun{rootCreds <- AWSRootCredentials$new(credentialPrefix = "/i/hide/my/files")}
Provide filenames if not using 'config' & 'credentials'
\dontrun{rootCreds <- AWSRootCredentials$new(
   credentialPrefix = "/i/hide/my/files")}
   credentialFileName = 'myCreds',
   configFileName = 'myConfig'
)
\dontrun{rootCreds <- AWSRootCredentials$new(AWS_ACCESS_KEY_ID = "blahblah", AWS_SECRET_ACCESS_KEY = "blahblah")}
\dontrun{rootCreds}
\dontrun{rootCreds$AWS_ACCESS_KEY_ID}
\dontrun{rootCreds$AWS_SECRET_ACCESS_KEY}
rootCreds$profileSettings

}
\seealso{
Other credential management functions: \code{\link{AWSTemporaryCredentials}},
  \code{\link{credsFromInstanceMetadata}},
  \code{\link{genCredentialFilePath}},
  \code{\link{getCredentials}}, \code{\link{getProfiles}},
  \code{\link{getSTSCredentials}},
  \code{\link{parseCredentialFile}},
  \code{\link{stsGenContentString}},
  \code{\link{tempCredentialHandler}}
}
\concept{credential management functions}
\keyword{datasets}
